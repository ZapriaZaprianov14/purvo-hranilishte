#include <Keypad.h>
#include <Wire.h> 
#include <LiquidCrystal.h>

LiquidCrystal lcd(13, 12, 11, 10, 9, 8);

long a = 0;
long b = 0;
double total = 0;

char k;
const byte ROWS = 4;
const byte COLS = 4;

char keys[ROWS][COLS] = {
  {'1','2','3','+'},
  {'4','5','6','-'},
  {'7','8','9','*'},
  {'C','0','=','/'}
};
byte rowPins[ROWS] = {7,6,5,4}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {3,2,1,0}; //connect to the column pinouts of the keypad



//initialize an instance of class NewKeypad
Keypad x = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS); 

void setup()
{
lcd.begin(16, 2);               // start lcd


for(int i=0;i<=3;i++);
lcd.setCursor(0,0);
  lcd.print("Calculator");
  lcd.setCursor(0,1);
delay(2000);


lcd.clear();
lcd.setCursor(0, 0);
}


void loop()
{

  k = x.getKey();
  switch(k) 
  {
  case '0' ... '9': // this keeps collecting the a value until a operator is pressed "+-*/"
    lcd.setCursor(0,0);
    a = a * 10 + (k - '0');
    lcd.print(a);
    break;

  case '+': //addition
    a = (total != 0 ? total : a);
    lcd.setCursor(0,1);
    lcd.print("+");
    b = BNumber(); // get the collected the b number
    total = a + b;
    lcd.setCursor(0,3);
    lcd.print(total);
    a = 0, b = 0; // reset values back to zero for next use
    break;

  case '-': //substraction
    a = (total != 0 ? total : a);
    lcd.setCursor(0,1);
    lcd.print("-");
    b = BNumber();
    total = a - b;
    lcd.setCursor(0,3);
    lcd.print(total);
    a = 0, b = 0;
    break;

  case '*': //multiplication
    a = (total != 0 ? total : a);



    lcd.setCursor(0,1);
    lcd.print("*");
    b = BNumber();


    total = a * b;
    lcd.setCursor(0,3);
    lcd.print(total);
    a = 0, b = 0;
    break;

  case '/': //division
    a = (total != 0 ? total : a);
    lcd.setCursor(0,1);
    lcd.print("/");
    b = BNumber();
    lcd.setCursor(0,3);

    b == 0 ? lcd.print("Invalid") : total = (float)a / (float)b;  

    lcd.print(total);
    a = 0, b = 0;
    break;

  case 'C': //clear
    total = 0;
    lcd.clear();
    break;
  }
}

long BNumber()
{
  while( 1 )
  {
    k = x.getKey();
   


 if(k >= '0' && k <= '9')
    {
      b = b * 10 + (k - '0');
      lcd.setCursor(0,2);
      lcd.print(b);
    }

    if(k == '=') break;  //return b;
  }
 return b; 
}
